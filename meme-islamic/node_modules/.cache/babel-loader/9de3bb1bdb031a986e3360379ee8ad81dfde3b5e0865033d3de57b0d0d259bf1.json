{"ast":null,"code":"var _jsxFileName = \"D:\\\\mk memes\\\\meme-islamic\\\\src\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport memeData from './mockData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Home() {\n  _s();\n  const [topText, setTopText] = useState('');\n  const [bottomText, setBottomText] = useState('');\n  const [currentMeme, setCurrentMeme] = useState(memeData[0]);\n  const handleGenerateMeme = () => {\n    const randomIndex = Math.floor(Math.random() * memeData.length);\n    setCurrentMeme(memeData[randomIndex]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Top text\",\n        value: topText,\n        onChange: e => setTopText(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Bottom text\",\n        value: bottomText,\n        onChange: e => setBottomText(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleGenerateMeme,\n      className: \"generate-button\",\n      children: \"Get a new meme image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"meme-image-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: currentMeme.image,\n        alt: currentMeme.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: currentMeme.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: currentMeme.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}\n_s(Home, \"TwcKceB1ipGIMzqkfnWIfXV8xYQ=\");\n_c = Home;\nexport default Home;\n\n// import React, { useState } from 'react';\n// import GenerateButton from './components/GenerateButton';\n\n// function Home() {\n//   const [topText, setTopText] = useState('');\n//   const [bottomText, setBottomText] = useState('');\n\n//   const handleGenerateMeme = () => {\n//     console.log('Meme generated with top text:', topText, 'and bottom text:', bottomText);\n//   };\n\n//   return (\n//     <div className=\"home-container\">\n//       <div className=\"form-container\">\n//         <input \n//           type=\"text\" \n//           placeholder=\"Top text\" \n//           value={topText}\n//           onChange={(e) => setTopText(e.target.value)} \n//         />\n//         <input \n//           type=\"text\" \n//           placeholder=\"Bottom text\" \n//           value={bottomText}\n//           onChange={(e) => setBottomText(e.target.value)} \n//         />\n//       </div>\n//       <GenerateButton onClick={handleGenerateMeme} />\n//     </div>\n//   );\n// }\n\n// export default Home;\n\n// // import React from 'react';\n// // import MemeList from './components/MemeList';\n\n// // function Home() {\n// //   return (\n// //     <div>\n// //       <h2>Home Page</h2>\n// //       <MemeList />\n// //     </div>\n// //   );\n// // }\n\n// // export default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","memeData","jsxDEV","_jsxDEV","Home","_s","topText","setTopText","bottomText","setBottomText","currentMeme","setCurrentMeme","handleGenerateMeme","randomIndex","Math","floor","random","length","className","children","type","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","src","image","alt","title","description","_c","$RefreshReg$"],"sources":["D:/mk memes/meme-islamic/src/Home.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport memeData from './mockData';\r\n\r\nfunction Home() {\r\n  const [topText, setTopText] = useState('');\r\n  const [bottomText, setBottomText] = useState('');\r\n  const [currentMeme, setCurrentMeme] = useState(memeData[0]);\r\n\r\n  const handleGenerateMeme = () => {\r\n    const randomIndex = Math.floor(Math.random() * memeData.length);\r\n    setCurrentMeme(memeData[randomIndex]);\r\n  };\r\n\r\n  return (\r\n    <div className=\"home-container\">\r\n      <div className=\"form-container\">\r\n        <input \r\n          type=\"text\" \r\n          placeholder=\"Top text\" \r\n          value={topText}\r\n          onChange={(e) => setTopText(e.target.value)} \r\n        />\r\n        <input \r\n          type=\"text\" \r\n          placeholder=\"Bottom text\" \r\n          value={bottomText}\r\n          onChange={(e) => setBottomText(e.target.value)} \r\n        />\r\n      </div>\r\n      <button onClick={handleGenerateMeme} className=\"generate-button\">Get a new meme image</button>\r\n      <div className=\"meme-image-container\">\r\n        <img src={currentMeme.image} alt={currentMeme.title} />\r\n        <h2>{currentMeme.title}</h2>\r\n        <p>{currentMeme.description}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState } from 'react';\r\n// import GenerateButton from './components/GenerateButton';\r\n\r\n// function Home() {\r\n//   const [topText, setTopText] = useState('');\r\n//   const [bottomText, setBottomText] = useState('');\r\n\r\n//   const handleGenerateMeme = () => {\r\n//     console.log('Meme generated with top text:', topText, 'and bottom text:', bottomText);\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"home-container\">\r\n//       <div className=\"form-container\">\r\n//         <input \r\n//           type=\"text\" \r\n//           placeholder=\"Top text\" \r\n//           value={topText}\r\n//           onChange={(e) => setTopText(e.target.value)} \r\n//         />\r\n//         <input \r\n//           type=\"text\" \r\n//           placeholder=\"Bottom text\" \r\n//           value={bottomText}\r\n//           onChange={(e) => setBottomText(e.target.value)} \r\n//         />\r\n//       </div>\r\n//       <GenerateButton onClick={handleGenerateMeme} />\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default Home;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// // import React from 'react';\r\n// // import MemeList from './components/MemeList';\r\n\r\n// // function Home() {\r\n// //   return (\r\n// //     <div>\r\n// //       <h2>Home Page</h2>\r\n// //       <MemeList />\r\n// //     </div>\r\n// //   );\r\n// // }\r\n\r\n// // export default Home;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACd,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACQ,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACU,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAACC,QAAQ,CAAC,CAAC,CAAC,CAAC;EAE3D,MAAMW,kBAAkB,GAAGA,CAAA,KAAM;IAC/B,MAAMC,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGf,QAAQ,CAACgB,MAAM,CAAC;IAC/DN,cAAc,CAACV,QAAQ,CAACY,WAAW,CAAC,CAAC;EACvC,CAAC;EAED,oBACEV,OAAA;IAAKe,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC7BhB,OAAA;MAAKe,SAAS,EAAC,gBAAgB;MAAAC,QAAA,gBAC7BhB,OAAA;QACEiB,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,UAAU;QACtBC,KAAK,EAAEhB,OAAQ;QACfiB,QAAQ,EAAGC,CAAC,IAAKjB,UAAU,CAACiB,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7C,CAAC,eACF1B,OAAA;QACEiB,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,aAAa;QACzBC,KAAK,EAAEd,UAAW;QAClBe,QAAQ,EAAGC,CAAC,IAAKf,aAAa,CAACe,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACN1B,OAAA;MAAQ2B,OAAO,EAAElB,kBAAmB;MAACM,SAAS,EAAC,iBAAiB;MAAAC,QAAA,EAAC;IAAoB;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC9F1B,OAAA;MAAKe,SAAS,EAAC,sBAAsB;MAAAC,QAAA,gBACnChB,OAAA;QAAK4B,GAAG,EAAErB,WAAW,CAACsB,KAAM;QAACC,GAAG,EAAEvB,WAAW,CAACwB;MAAM;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACvD1B,OAAA;QAAAgB,QAAA,EAAKT,WAAW,CAACwB;MAAK;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC5B1B,OAAA;QAAAgB,QAAA,EAAIT,WAAW,CAACyB;MAAW;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACxB,EAAA,CAlCQD,IAAI;AAAAgC,EAAA,GAAJhC,IAAI;AAoCb,eAAeA,IAAI;;AAsFnB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAyDA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}